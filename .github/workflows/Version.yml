name: Database Versioning

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]
  workflow_dispatch:
env:
  AWS_REGION: "eu-west-1"
permissions:
  id-token: write
  contents: read
jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with: 
          role-to-assume: arn:aws:iam::804180393465:role/TutorDB_CICD
          aws-region: "eu-west-1"
          role-session-name: GitHub-OIDC-TERRAFORM

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.5

      # - name: Terraform fmt
      #   id: fmt
      #   run: terraform fmt -check
      #   continue-on-error: true

      - name: Terraform Init
        id: init
        env:
          AWS_BUCKET_NAME: tutordb-oidc-bucket
          AWS_BUCKET_KEY_NAME: infra.tfstate
        run: terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        if: github.event_name == 'pull_request'
        continue-on-error: true

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env: 
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Initialisation: \`{{ steps.init.outcome }}\`
            #### Terraform Validation: \`{{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            $ {{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

           

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
      #   run: terraform apply -auto-approve -input=false
      
